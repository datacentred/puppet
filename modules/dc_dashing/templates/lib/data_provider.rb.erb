#Queries various datasources and returns Hash with requested data.
class DataProvider
  GRAPHITE_PREFIX = <%= @data_provider_graphite_prefix %>
  def initialize
    @graphite = Graphite.new
    @page     = PagerDutyClient.new
    @sir      = SirportlyClient.new
    @icinga   = IcingaClient.new
  end

  #CEPH
  #All ceph methods return 3 sets of results for each of the ceph-mon nodes
  def get_available_cluster_space
    target = "#{GRAPHITE_PREFIX}.ceph-mon-0.ceph-ceph.cluster.gauge.total_avail"
    @graphite.value(target, "-3min")
  end
  def get_ceph_max_capacity
    target = "#{GRAPHITE_PREFIX}.ceph-mon-0.ceph-ceph.cluster.gauge.total_space"
    @graphite.value(target, "-3min")
  end
  #get ceph iops as graph points from graphite
  def get_ceph_iops
    target = "#{GRAPHITE_PREFIX}.ceph-mon-0.ceph-ceph.health.gauge.iops"
    @graphite.points(target, "-10min")
  end
  #OpenStack
  def get_total_vcpus_used
    target = "#{GRAPHITE_PREFIX}.chrome.openstack-nova.cluster.gauge.config-vcpus_used"
    @graphite.value(target, "-3min")
  end
  #get total number of running instances
  def get_total_number_of_running_vms
    target = "#{GRAPHITE_PREFIX}.chrome.openstack-nova.cluster.gauge.config-running_vms"
    @graphite.value(target, "-3min")
  end

  def get_total_memory_usage
    target = "scale(#{GRAPHITE_PREFIX}.chrome.openstack-nova.cluster.gauge.config-memory_mb_used,1024000)"
    @graphite.value(target, "-3min")
  end

  #pagerduty
  def get_on_call_stats
    @page.get_on_call_status
  end

  def get_acknowledged_incidents
    @page.get_acked_incidents
  end

  def get_triggered_incidents
    @page.get_triggered_incidents
  end 

  def get_all_incidents
    @page.get_incidents
  end

  #icinga
  def get_current_service_status
    @icinga.get_service_status_summary
  end

  def get_number_of_down_hosts
    @icinga.get_down_hosts.length
  end

  def get_all_hosts
    return @icinga.get_all_hosts
  end
  #TODO: REMOVE
  def get_total_number_of_hosts
    @icinga.get_all_hosts.length
  end

  def get_number_of_service_problems
    data = @icinga.get_service_status_summary
    return data.values.inject(:+)
  end

  def get_list_of_down_hosts
    @icinga.get_down_hosts
  end
  
  def get_list_of_down_hosts_with_services
    @icinga.get_down_hosts_and_services
  end
  
  #Sirportly 
  def get_summary_of_open_tickets
    @sir.get_open_ticket_summary
  end

end
