#!/bin/bash
# Dashing service
# USAGE: start|stop|restart|status

### BEGIN INIT INFO
# Provides:          dashboard
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Dashing service.
# Description:       Manage dashing server via 'System V init'
### END INIT INFO

set -e
. /lib/lsb/init-functions

# Must be a valid filename
NAME=dashing
DASHING_DIR=<%= @dashing_dir_path %>
PIDFILE="$DASHING_DIR/$NAME.pid"
DAEMON=/usr/local/bin/$NAME
GEM_HOME=/var/lib/gems/1.9.1

DASHING_PORT=3030
DAEMON_OPTS="start -d -p $DASHING_PORT -P $PIDFILE --tag $NAME -D"

RUNUSER=root
RUNGROUP=root

test -x $DAEMON || { log_failure_msg "$NAME not installed";exit 1; }

function checkuser() {
 if [[ $UID != 0 ]]; then 
    if [[ `whoami` != "$RUNUSER" ]]; then
      log_failure_msg "$1 must be run as root or $RUNUSER"
      exit 1
    fi
 fi
}

function start_dashing() {
  log_action_msg "Starting daemon: $NAME" || true
  sleep 5
  start-stop-daemon --verbose --quiet --start --chuid $RUNUSER:$RUNGROUP --chdir $DASHING_DIR --exec $DAEMON -- $DAEMON_OPTS
  log_end_msg 0
}

function stop_dashing() {
  log_action_msg "Stopping daemon: $NAME" || true
  start-stop-daemon --verbose --quiet --test --chuid $RUNUSER:$RUNGROUP --chdir $DASHING_DIR --exec $DAEMON -- $DAEMON_OPTS status
  log_end_msg 0
}

function status_dashing() {
  if [ -f "$PIDFILE" ]; then
    pid=`cat "$PIDFILE"`
    if kill -0 $pid > /dev/null 2> /dev/null ; then
      return 0
    else
      return 2 #proc dead but does not belong to us
    fi
  else
    return 3 # process is not running at all
  fi
}

case "$1" in
  start)
    checkuser start
    start_dashing
  ;;
  stop)
    checkuser stop
    stop_dashing
  ;;
  restart)
    checkuser restart
    log_action_msg "Restarting daemon: $NAME"
    stop_dashing
    start_dashing
  ;;
  status)
    log_action_msg "geting daemon status: $NAME"
    status_dashing
    code=$?
    if [ $code -eq 0 ] ; then
      echo "$name is running"
    else
      echo "$name is not running"
    fi
    exit $code
  ;;
  *)
  echo "Usage: "$1" {start|stop|restart|status}"
  exit 1
esac

exit 0
