#!/usr/bin/env python
"""Check the glance API"""

# pylint: disable=import-error

import argparse
import keystoneclient
import glanceclient
import sys
import time

NAGIOS_OK = 0
NAGIOS_WARNING = 1
NAGIOS_CRITICAL = 2
NAGIOS_UNKNOWN = 3


def get_token(args):
    """Gets an authentication token from keystone"""

    try:
        keystone = keystoneclient.client.Client(username=args.username,
                                                tenant_name=args.project,
                                                password=args.password,
                                                auth_url=args.auth_url,
                                                region_name=args.region)
    except keystoneclient.exceptions.AuthorizationFailure:
        print 'CRITICAL: unable to establish connection'
        sys.exit(NAGIOS_CRITICAL)

    keystone.authenticate()
    return keystone.auth_token


def main():
    """Lists all glance images"""

    parser = argparse.ArgumentParser()
    parser.add_argument('-H', '--host', required=True)
    parser.add_argument('-a', '--auth-url', required=True)
    parser.add_argument('-u', '--username', required=True)
    parser.add_argument('-p', '--password', required=True)
    parser.add_argument('-P', '--project', required=True)
    parser.add_argument('-r', '--region')
    parser.add_argument('-w', '--warning', type=float, default=20.0)
    parser.add_argument('-c', '--critical', type=float, default=30.0)
    args = parser.parse_args()

    token = get_token(args)
    glance = glanceclient.Client(2, endpoint=args.host, token=token)

    start = time.time()
    count = sum(1 for image in glance.images.list())
    end = time.time()
    delta = end - start

    code = NAGIOS_OK
    if delta >= args.warning:
        code = NAGIOS_WARNING
    if delta >= args.critical:
        code = NAGIOS_CRITICAL

    status = ['OK', 'WARNING', 'CRITICAL'][code]
    print ('{0}: {1} images returned in {2:.3f}s | '
           'time={2:.3f};{3:.3f};{4:.3f}').\
          format(status, count, delta, args.warning, args.critical)

    sys.exit(code)


if __name__ == '__main__':
    main()

# vi: ts=4 et:
