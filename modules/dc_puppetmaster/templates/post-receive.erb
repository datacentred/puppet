#!/usr/bin/env ruby
# Puppet Labs is a ruby shop, so why not do the post-receive hook in ruby?
require 'fileutils'

# Set this to where you want to keep your environments
ENVIRONMENT_BASEDIR = "/etc/puppet/environments"

# post-receive hooks set GIT_DIR to the current repository. If you want to
# clone from a non-local repository, set this to the URL of the repository,
# such as git@git.host:puppet.git
SOURCE_REPOSITORY = File.expand_path(ENV['GIT_DIR'])

# The git_dir environment variable will override the --git-dir, so we remove it
# to allow us to create new repositories cleanly.
ENV.delete('GIT_DIR')

# Ensure that we have the underlying directories, otherwise the later commands
# may fail in somewhat cryptic manners.
unless File.directory? ENVIRONMENT_BASEDIR
  puts %Q{#{ENVIRONMENT_BASEDIR} does not exist, cannot create environment directories.}
  exit 1
end

# You can push multiple refspecs at once, like 'git push origin branch1 branch2',
# so we need to handle each one.
$stdin.each_line do |line|
  oldrev, newrev, refname = line.split(" ")

  # Determine the branch name from the refspec we're received, which is in the
  # format refs/heads/, and make sure that it doesn't have any possibly
  # dangerous characters
  branchname = refname.sub(%r{^refs/heads/(.*$)}) { $1 }
  if branchname =~ /[\W-]/
    puts %Q{Branch "#{branchname}" contains non-word characters, ignoring it.}
    next
  end

  # If we are operating on the master branch update the production
  # environment
  if branchname == "master"
    environment_name = "production"
  else
    environment_name = branchname
  end

  environment_path = "#{ENVIRONMENT_BASEDIR}/#{environment_name}"

  if newrev =~ /^0+$/
    # We've received a push with a null revision, something like 000000000000,
    # which means that we should delete the given branch.
    puts "[1;32m*[0m Deleting existing environment #{environment_name}"
    if File.directory? environment_path
      FileUtils.rm_rf environment_path
    end

    # And kill the branch off in GitHub
    puts "[1;32m*[0m Deleting branch from GitHub"
    %x{git push --delete origin #{branchname}}
  else
    # We have been given a branch that needs to be created or updated. If the
    # environment exists, update it. Else, create it.

    if File.directory? environment_path
      # Update an existing environment. We do a fetch and then reset in the
      # case that someone did a force push to a branch.

      puts "[1;32m*[0m Updating existing environment #{environment_name} ..."
      Dir.chdir environment_path
      %x{git fetch --all}
      %x{git reset --hard "origin/#{branchname}"}
    else
      # Instantiate a new environment from the current repository.

      puts "[1;32m*[0m Creating new environment #{environment_name} ..."
      %x{git clone #{SOURCE_REPOSITORY} #{environment_path} --branch #{branchname}}
    end

    # We use submodules, so initialise any new ones
    Dir.chdir environment_path
    puts "[1;32m*[0m Initializing submodules ..."
    %x{git submodule init}

    # Update submodules as the hash reference may have changed
    puts "[1;32m*[0m Updating submodules ..."
    %x{git submodule update}

    # Backup the branch to GitHub
    Dir.chdir SOURCE_REPOSITORY
    puts "[1;32m*[0m Backing up changes to GitHub ..."
    %x{git push origin #{branchname}}
  end
end

