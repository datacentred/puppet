#!/bin/bash
IPMITOOL=$(which ipmitool)
OMSHELL=$(which omshell)
IPMI_ADDRESS=$($IPMITOOL lan print $IPMI_CHANNEL | grep -w 'IP Address ' | awk '{print $4}')
OMAPI_HOST="<%= scope.lookupvar('dc_bmc::omapi_host') %>"
OMAPI_PORT="<%= scope.lookupvar('dc_bmc::omapi_port') %>"
OMAPI_KEY="<%= scope.lookupvar('dc_bmc::omapi_key') %>"
OMAPI_SECRET="<%= scope.lookupvar('dc_bmc::omapi_secret') %>"
IPSRC=$(/usr/bin/ipmitool lan print 1 | grep Source | awk '{print $5}')

function omapi_unset {
$OMSHELL << EOF
server $OMAPI_HOST
port $OMAPI_PORT
key $OMAPI_KEY $OMAPI_SECRET
connect
new lease
set ip-address = $IPMI_ADDRESS
open
set ends = 00:00:00:00
update
set state = 00:00:00:01
update
EOF
}

function find_lan_channel {
for c in {1..3}
do
        if $IPMITOOL lan print $c &> /dev/null
        then
                LAN_CHANNEL=$c
		break
        else
                continue
        fi
done
if [ -z $LAN_CHANNEL ]
then
	echo "Could not find IPMI lan channel"
	exit 1
fi
}

# Check which lan channel IPMI is on
find_lan_channel

# Unset dynamically assigned lease
# Can take 10 minutes or so before a new lease can be assigned using OMAPI

if [[ $IPSRC != 'Static' && $IPMI_ADDRESS != '0.0.0.0' ]] 
then
	if ! $IPMITOOL lan set $LAN_CHANNEL ipsrc static
	then
		echo "Could not set IPMI to static"
		exit 1
	else
		echo "IPMI set to static"
		echo "Waiting for interface to release"
		# DHCP will ping the address so wait until the IPMI interface gives up properly
		# This usually takes less than 20 seconds
		sleep 20
		echo "Unsetting lease using OMAPI"
		omapi_unset
		echo "Lease unset"
	fi
else
	echo "No DHCP lease to unset"
fi
