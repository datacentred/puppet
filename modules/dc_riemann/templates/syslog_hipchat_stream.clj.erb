(use 'clojure.java.io)

(defn get_messages [filename]
  (with-open [rdr (reader filename)]
    (doall (line-seq rdr))))

(def messages (get_messages "<%= scope.lookupvar('dc_riemann::riemann_whitelist') %>"))

(def whitelist_pattern
  (str "^((?!(" (clojure.string/join "|" messages) ")).)*$"))

(streams
 (by :service
  (where (or (state "4")(state "3")(state "2")(state "1")(state "0"))
   (where (description (re-pattern whitelist_pattern))
    (rollup 3 3600
      (hipchat {:token "<%= scope.lookupvar('dc_riemann::riemann_hipchat_auth_token') %>"
                :room "<%= scope.lookupvar('dc_riemann::riemann_hipchat_room') %>"
                :from "<%= scope.lookupvar('dc_riemann::riemann_hipchat_from') %>"
                :notify 0
               }))))))
