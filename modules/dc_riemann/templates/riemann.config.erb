; vim: filetype=clojure

(logging/init {:file "/var/log/riemann/riemann.log"})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server   {:host host})
  (udp-server   {:host host})
  (ws-server    {:host host})
  (repl-server  {:host host}))

(periodically-expire 10)

(let [index (default :ttl 300 (index))]
  ; Inbound events will be passed to these streams:
  (streams
    ; Index all events immediately.
    index

    ; Calculate an overall rate of events.
    (with {:metric 1 :host nil :state "ok" :service "events/sec"}
      (rate 5 index))

    ; Log expired events.
    (expired
      (fn [event] (info "expired" event)))
))

(def directory (clojure.java.io/file "<%= @riemann_config_dir %>"))
(doseq
  [ f (filter #(and (.isFile %) (.endsWith (.getName %) ".clj"))
        (file-seq (clojure.java.io/file directory)))]
            (load-file (.toString f)))
