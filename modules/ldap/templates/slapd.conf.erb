###############################################################################
# << FILE MANAGED BY PUPPET >>
# Manual changes are likey to be overwritten
###############################################################################

#allow bind_v2
<% if bind_anon == true then -%>
allow bind_anon_dn
<% end -%>

# Schema and objectClass definitions
<% scope.lookupvar('ldap::params::schema_base').each do |schema| -%>
include		<%= scope.lookupvar('ldap::params::schema_prefix') %>/<%= schema %>.schema
<% end -%>

# Additional schemas
<% scope.lookupvar('schema_inc').each do |schema| -%>
include		<%= scope.lookupvar('ldap::params::schema_prefix') %>/<%= schema %>.schema
<% end -%>

pidfile         <%= scope.lookupvar('ldap::params::server_run') %>/slapd.pid
argsfile        <%= scope.lookupvar('ldap::params::server_run') %>/slapd.args

# Read slapd.conf(5) for possible values
loglevel	<%= log_level %>

modulepath	<%= scope.lookupvar('ldap::params::module_prefix') %>
<% scope.lookupvar('ldap::params::modules_base').each do |mod| -%>
moduleload	<%= mod %>
<% end -%>

<% modules_inc.each do |mod| -%>
moduleload	<%= mod %>
<% end -%>
#moduleload	syncprov

<% if ssl == true then -%>
TLSCACertificateFile   <%= scope.lookupvar('ldap::params::ssl_prefix') %>/<%= ssl_ca   %>
TLSCertificateFile     <%= scope.lookupvar('ldap::params::ssl_prefix') %>/<%= ssl_cert %>
TLSCertificateKeyFile  <%= scope.lookupvar('ldap::params::ssl_prefix') %>/<%= ssl_key  %>
#TLSVerifyClient        allow
<% end -%>

#######################################################################

# FIXME: puppet
backend		bdb

# FIXME: puppet
database	bdb
suffix		"<%= suffix %>"
directory	<%= scope.lookupvar('ldap::params::db_prefix') %>
rootdn		"<%= rootdn %>"
rootpw		"<%= rootpw %>"

#######################################################################
# << Syncprov

<% if has_variable?('syncprov') and syncprov == true then -%>
overlay syncprov
syncprov-checkpoint <%= syncprov_checkpoint %>
syncprov-sessionlog <%= syncprov_sessionlog %>
<% end -%>

<% if has_variable?('sync_rid') then -%>
syncrepl rid=<%= sync_rid %>
	provider=<%= sync_provider %>
	type=<%= sync_type %>
	interval=<%= sync_interval %>
	searchbase="<% if sync_base == '' then %><%= suffix %><% else %><%= sync_base %><% end %>"
	filter="<%= sync_filter %>"
	attrs="<%= sync_attrs %>"
	scope=<%= sync_scope %>
	schemachecking=off
	bindmethod=simple
	binddn="<%= sync_binddn %>"
	credentials="<%= sync_bindpw %>"

updateref <%= sync_provider %>
<% end -%>

#######################################################################

checkpoint   512 30
dbconfig set_cachesize      0 2097152 0
dbconfig set_lk_max_objects 1500
dbconfig set_lk_max_locks   1500
dbconfig set_lk_max_lockers 1500

#######################################################################

lastmod		on

<% if has_variable?('syncprov') and sync_binddn != false then -%>
limits dn.exact="<%= sync_binddn%>" time.soft=unlimited time.hard=unlimited size.soft=unlimited size.hard=unlimited
<% end -%>

<% scope.lookupvar('ldap::params::index_base').each do |idx| -%>
<%= idx %> 
<% end -%>

<% index_inc.each do |idx| -%>
<%= idx %> 
<% end -%>

# users can authenticate and change their password
access to dn.subtree="<%= suffix %>" attrs=userPassword,shadowLastChange,
<% if has_variable?('syncprov') and sync_binddn != false then -%>
	by dn.exact="<%= sync_binddn %>" read
<% end -%>
	by self write
	by anonymous auth
	by * none

#access to dn.subtree="<%= suffix %>" attrs=sambaNTPassword,sambaLMPassword,sambaPwdMustChange,sambaBadPasswordCount,sambaBadPasswordTime,sambaPwdLastSet
#<% if has_variable?('syncprov') and sync_binddn != false then -%>
#	by dn.exact="<%= sync_binddn %>" read
#<% end -%>
#	by self write
#	by anonymous auth
#	by * none

## some attributes need to be readable anonymously so that 'id user' can answer correctly
access to dn.subtree="<%= suffix %>" attrs=objectClass,entry,gecos,homeDirectory,uid,uidNumber,gidNumber,cn,memberUid
<% if has_variable?('syncprov') and sync_binddn != false then -%>
	by dn.exact="<%= sync_binddn %>" read
<% end -%>
	by * read

access to dn.subtree="<%= suffix %>"
<% if has_variable?('syncprov') and sync_binddn != false then -%>
	by dn.exact="<%= sync_binddn %>" read
<% end -%>
	by self read
	by * read

